/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// Layer definitions
#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define MOUSE 3
#define SYMBOLS 4
#define FUNCTION 5
#define NAV 6
#define NUMBER 7
#define SETTINGS 8

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 12 13 14 16 17 24 25 26 27 28 29 36 37 38 15 5 4 3 39 40 41>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        meh: meh {
            compatible = "zmk,behavior-macro";
            label = "MEH";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LSHFT))>;
        };

        hypr: hyper {
            compatible = "zmk,behavior-macro";
            label = "HYPER";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(LSHFT)))>;
        };

        lt_esc: layer_tap_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_ESC";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;  // -20ms
            bindings = <&mo>, <&kp>;
        };

        lt_space: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;  // -20ms
            bindings = <&mo>, <&kp>;
        };

        lt_minus: layer_tap_minus {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_MINUS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <235>;  // +35ms
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&caps_word                 &kp Q         &kp W        &kp E        &kp R         &kp T      &kp Y          &kp U         &kp I        &kp O        &kp P            &kp BACKSLASH
&mt LS(LA(LG(LCTRL))) TAB  &HML LCTRL A  &HML LALT S  &HML LGUI D  &HML LSHFT F  &kp G      &kp H          &HMR RSHFT J  &HMR RGUI K  &HMR RALT L  &HMR RCTRL SEMI  &mt RS(RA(RG(RCTRL))) SQT
&kp UNDER                  &kp Z         &kp X        &kp C        &kp V         &kp B      &kp N          &kp M         &kp COMMA    &kp DOT      &kp FSLH         &lt_minus SETTINGS MINUS
                                                      &mo FUNCTION        &lt NUMBER ENTER     &lt_esc NAV ESC    &lt MOUSE BACKSPACE  &lt_space SYMBOLS SPACE     &none
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
        mouse_layer {
            label = "Mouse";
            bindings = <
&trans        &trans        &mwh DN       &mmv MOVE_UP  &mwh UP       &trans            &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans        &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans         &trans        &kp RSHFT     &kp RGUI      &kp RALT      &kp RCTRL     &trans
&trans        &trans        &mwh LEFT     &trans        &mwh RIGHT    &mkp MCLK         &trans        &none         &trans        &trans        &trans        &trans
                                          &mkp LCLK     &mkp RCLK     &trans            &trans        &trans        &trans
            >;
        };
        symbols_layer {
            label = "Symbols";
            bindings = <
&kp LT        &kp STAR      &kp AMPS      &kp LBRC      &kp RBRC      &kp GT            &trans        &trans        &trans        &trans        &trans        &trans
&kp TILDE     &kp CARET     &kp PRCNT     &kp LBKT      &kp RBKT      &kp DLLR          &trans        &kp RSHFT     &kp RGUI      &kp RALT      &kp RCTRL     &trans
&kp PIPE      &kp AT        &kp HASH      &kp LPAR      &kp RPAR      &kp EXCL          &trans        &trans        &hypr         &meh          &trans        &trans
                                          &kp EQUAL     &kp GRAVE     &trans            &trans        &trans        &trans
            >;
        };

        function_layer {
            label = "Function";
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans            &trans        &kp F7        &kp F8        &kp F9        &kp F12       &trans
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &trans            &trans        &kp F4        &kp F5        &kp F6        &kp F11       &trans
&trans        &trans        &meh          &hypr         &trans        &trans            &trans        &kp F1        &kp F2        &kp F3        &kp F10       &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        navigation_layer {
            label = "Nav";
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &trans            &trans        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans
&trans        &trans        &meh          &hypr         &none         &trans            &trans        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        number_layer {
            label = "Number";
            bindings = <
&none         &none         &none         &none         &none         &none             &kp MINUS     &kp N7        &kp N8        &kp N9        &kp FSLH      &none
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &none             &kp PLUS      &kp N4        &kp N5        &kp N6        &kp STAR      &none
&none         &none         &meh          &hypr         &none         &none             &kp DOT       &kp N1        &kp N2        &kp N3        &kp EQUAL     &none
                                          &trans        &trans        &trans            &kp DEL       &kp N0        &trans
            >;
        };

        settings_layer {
            label = "Settings";
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans        &trans        &trans        &trans        &trans     &bootloader
&out OUT_TOG  &trans        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &trans            &kp PG_UP     &kp HOME      &kp UP        &kp END       &trans     &trans
&trans        &kp C_PREV    &kp C_NEXT    &kp C_STOP    &kp C_PP      &trans            &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &trans     &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
