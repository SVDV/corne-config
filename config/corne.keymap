/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define MOUSE 3
#define SYMBOLS 4
#define FUNCTION 5
#define NAV 6
#define NUMBER 7
#define SETTINGS 8

// Key position groups for Corne (36 keys)
// Physical layout positions:
// ╭────────────────────────╮  ╭────────────────────────╮
// │  0   1   2   3   4   5 │  │  6   7   8   9  10  11 │
// │ 12  13  14  15  16  17 │  │ 18  19  20  21  22  23 │
// │ 24  25  26  27  28  29 │  │ 30  31  32  33  34  35 │
// ╰───────────╮ 36  37  38 │  │ 39  40  41 ╭───────────╯
//             ╰────────────╯  ╰────────────╯

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // Left hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // Right hand keys
#define THUMBS 36 37 38 39 40 41  // Thumb keys

/ {
    behaviors {
        caps_word {
            continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
        };

        hm_l_idx: hm_left_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_LEFT_INDEX";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <180>;  // -20ms for index finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_r_idx: hm_right_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_RIGHT_INDEX";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <180>;  // -20ms for index finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_l_mid: hm_left_middle {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_LEFT_MIDDLE";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <230>;  // +30ms for middle finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_r_mid: hm_right_middle {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_RIGHT_MIDDLE";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <230>;  // +30ms for middle finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_l_rng: hm_left_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_LEFT_RING";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <230>;  // +30ms for ring finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_r_rng: hm_right_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_RIGHT_RING";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <230>;  // +30ms for ring finger
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_l_pnk: hm_left_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_LEFT_PINKY";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <260>;  // +60ms for pinky
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hm_r_pnk: hm_right_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_RIGHT_PINKY";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <260>;  // +60ms for pinky
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        // Macro behaviors
        meh: meh {
            compatible = "zmk,behavior-macro";
            label = "MEH";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LSHFT))>;
        };

        hypr: hyper {
            compatible = "zmk,behavior-macro";
            label = "HYPER";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(LSHFT)))>;
        };

        // Layer-tap behaviors
        lt_esc: layer_tap_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_ESC";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;  // -20ms
            bindings = <&mo>, <&kp>;
        };

        lt_space: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;  // -20ms
            bindings = <&mo>, <&kp>;
        };

        ht_space: hold_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SPACE";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&mo>;
        };

        lt_minus: layer_tap_minus {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_MINUS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <235>;  // +35ms
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&caps_word                 &kp Q              &kp W             &kp E             &kp R              &kp T              &kp Y  &kp U              &kp I             &kp O             &kp P                 &kp BACKSLASH
&mt LS(LA(LG(LCTRL))) TAB  &hm_l_pnk LCTRL A  &hm_l_rng LALT S  &hm_l_mid LGUI D  &hm_l_idx LSHFT F  &kp G              &kp H  &hm_r_idx RSHFT J  &hm_r_mid RGUI K  &hm_r_rng RALT L  &hm_r_pnk RCTRL SEMI  &mt RS(RA(RG(RCTRL))) SQT
&kp UNDER                  &kp Z              &kp X             &kp C             &kp V              &kp B              &kp N  &kp M              &kp COMMA         &kp DOT           &kp FSLH              &lt_minus SETTINGS MINUS
                                                                &mo FUNCTION      &lt NUMBER ENTER   &lt_esc NAV ESC    &kp BACKSPACE  &ht_space SPACE SYMBOLS  &mo MOUSE
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
        mouse_layer {
            display-name = "Mouse";
            bindings = <
&trans        &trans        &msc SCRL_DOWN       &mmv MOVE_UP  &msc SCRL_UP       &trans            &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans        &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans         &trans        &kp RSHFT     &kp RGUI      &kp RALT      &kp RCTRL     &trans
&trans        &trans        &msc SCRL_LEFT     &trans        &msc SCRL_RIGHT    &mkp MB3         &trans        &none         &trans        &trans        &trans        &trans
                                          &mkp LCLK     &mkp RCLK     &trans            &trans        &trans        &trans
            >;
        };
        symbols_layer {
            display-name = "Symbols";
            bindings = <
&kp LT        &kp STAR      &kp AMPS      &kp LBRC      &kp RBRC      &kp GT            &trans        &trans        &trans        &trans        &trans        &trans
&kp TILDE     &kp CARET     &kp PRCNT     &kp LBKT      &kp RBKT      &kp DLLR          &trans        &kp RSHFT     &kp RGUI      &kp RALT      &kp RCTRL     &trans
&kp PIPE      &kp AT        &kp HASH      &kp LPAR      &kp RPAR      &kp EXCL          &trans        &trans        &hypr         &meh          &trans        &trans
                                          &kp EQUAL     &kp GRAVE     &trans            &trans        &trans        &trans
            >;
        };

        function_layer {
            display-name = "Function";
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans            &trans        &kp F7        &kp F8        &kp F9        &kp F12       &trans
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &trans            &trans        &kp F4        &kp F5        &kp F6        &kp F11       &trans
&trans        &trans        &meh          &hypr         &trans        &trans            &trans        &kp F1        &kp F2        &kp F3        &kp F10       &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        navigation_layer {
            display-name = "Nav";
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &trans            &trans        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans
&trans        &trans        &meh          &hypr         &none         &trans            &trans        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        number_layer {
            display-name = "Number";
            bindings = <
&none         &none         &none         &none         &none         &none             &kp MINUS     &kp N7        &kp N8        &kp N9        &kp FSLH      &none
&trans        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &none             &kp PLUS      &kp N4        &kp N5        &kp N6        &kp STAR      &none
&none         &none         &meh          &hypr         &none         &none             &kp DOT       &kp N1        &kp N2        &kp N3        &kp EQUAL     &none
                                          &trans        &trans        &trans            &kp DEL       &kp N0        &trans
            >;
        };

        settings_layer {
            display-name = "Settings";
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans        &trans        &trans        &trans        &trans     &bootloader
&out OUT_TOG  &trans        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &trans            &kp PG_UP     &kp HOME      &kp UP        &kp END       &trans     &trans
&trans        &kp C_PREV    &kp C_NEXT    &kp C_STOP    &kp C_PP      &trans            &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &trans     &trans
                                          &trans        &trans        &trans            &trans        &trans        &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
